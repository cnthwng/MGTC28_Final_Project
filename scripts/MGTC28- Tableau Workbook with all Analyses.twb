<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='All_Data' inline='true' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_Data' name='textscan.0x7sv6j0a8f9tg13qasis1ky9s1y'>
            <connection class='textscan' directory='C:/Users/cynth/Downloads' filename='All_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0x7sv6j0a8f9tg13qasis1ky9s1y' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0x7sv6j0a8f9tg13qasis1ky9s1y' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Year]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Week]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Need States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Need States]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Need States</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Sales]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Trade Spend ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Trade Spend ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Trade Spend ($)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Factory POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Factory POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Factory POS ($)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EComm POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EComm POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>EComm POS ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dc Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dc Amount]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Dc Amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Amt On Hand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Store Amt On Hand]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Store Amt On Hand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(COUNT([Store Amt On Hand])) - LOOKUP(ZN(COUNT([Store Amt On Hand])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Store POS' datatype='real' name='[Calculation_1903052344695136257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Factory POS ($)]) - SUM ([EComm POS ($)])' />
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Dc Amount]' role='measure' type='quantitative' />
      <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fiscal Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
        </aliases>
      </column>
      <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9]' role='measure' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Count' name='[cnt:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='CountD' name='[ctd:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Count' name='[diff:cnt:Store Amt On Hand:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Fiscal Year]' derivation='None' name='[none:Fiscal Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      <column-instance column='[Dc Amount]' derivation='Sum' name='[sum:Dc Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[tyr:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2021-09-01 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2023-05-01 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2021-01-01 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2022-09-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2021-05-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>#2024-01-01 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2022-01-01 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2023-09-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2021-10-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2023-06-01 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2021-06-01 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2023-02-01 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2022-07-01 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2021-02-01 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2022-10-01 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2022-05-01 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2021-07-01 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2023-03-01 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2022-02-01 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2023-10-01 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2022-03-01 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2022-06-01 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2022-08-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2021-11-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2023-07-01 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2021-08-01 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2023-04-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2021-03-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2022-11-01 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2022-04-01 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2021-12-01 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2023-08-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2021-04-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2022-12-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Need States:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Need State 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Need State 5&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Need State 4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Need State 3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Need State 2&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Dc Amount:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Trade Spend ($):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[cnt:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[ctd:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[diff:cnt:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[usr:Calculation1:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Fiscal Year:ok]' type='palette'>
            <map to='#053661'>
              <bucket>2023</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>2022</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>2021</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Date:ok]' palette='sf_bluegrass' type='palette'>
            <map to='#053661'>
              <bucket>2023</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>2022</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>2021</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All_Data.csv' id='All_Data.csv_7FBE1C29892142CEA10A28CE8717FBF9'>
            <properties context=''>
              <relation connection='textscan.0x7sv6j0a8f9tg13qasis1ky9s1y' name='All_Data.csv' table='[All_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Fiscal Year' ordinal='1' />
                  <column datatype='integer' name='Fiscal Week' ordinal='2' />
                  <column datatype='string' name='Need States' ordinal='3' />
                  <column datatype='real' name='Total Sales' ordinal='4' />
                  <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
                  <column datatype='real' name='Factory POS ($)' ordinal='6' />
                  <column datatype='real' name='EComm POS ($)' ordinal='7' />
                  <column datatype='real' name='Dc Amount' ordinal='8' />
                  <column datatype='real' name='Store Amt On Hand' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='All_Data (2)' inline='true' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_Data' name='textscan.1q719qu12gqiht182f8t30bmzqvv'>
            <connection class='textscan' directory='C:/Users/cynth/Downloads' filename='All_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Year]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Week]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Need States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Need States]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Need States</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Sales]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Trade Spend ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Trade Spend ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Trade Spend ($)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Factory POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Factory POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Factory POS ($)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EComm POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EComm POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>EComm POS ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dc Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dc Amount]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Dc Amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Amt On Hand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Store Amt On Hand]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Store Amt On Hand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fiscal Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
      <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]' role='measure' type='quantitative' />
      <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:EComm POS ($):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Factory POS ($):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Trade Spend ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Need States:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Need State 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Need State 4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Need State 3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Need State 2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Need State 5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All_Data.csv' id='All_Data.csv_618E9396B1334E95836A2A0A3C432ABF'>
            <properties context=''>
              <relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv' name='All_Data.csv' table='[All_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Fiscal Year' ordinal='1' />
                  <column datatype='integer' name='Fiscal Week' ordinal='2' />
                  <column datatype='string' name='Need States' ordinal='3' />
                  <column datatype='real' name='Total Sales' ordinal='4' />
                  <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
                  <column datatype='real' name='Factory POS ($)' ordinal='6' />
                  <column datatype='real' name='EComm POS ($)' ordinal='7' />
                  <column datatype='real' name='Dc Amount' ordinal='8' />
                  <column datatype='real' name='Store Amt On Hand' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='All_Data (3)' inline='true' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_Data' name='textscan.1q719qu12gqiht182f8t30bmzqvv (copy)'>
            <connection class='textscan' directory='C:/Users/cynth/Downloads' filename='All_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Year]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Week]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Need States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Need States]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Need States</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Sales]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Trade Spend ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Trade Spend ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Trade Spend ($)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Factory POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Factory POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Factory POS ($)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EComm POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EComm POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>EComm POS ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dc Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dc Amount]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Dc Amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Amt On Hand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Store Amt On Hand]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Store Amt On Hand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fiscal Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
      <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]' role='measure' type='quantitative' />
      <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Total Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:EComm POS ($):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Factory POS ($):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Total Trade Spend ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Need States:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Need State 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Need State 4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Need State 3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Need State 2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Need State 5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All_Data.csv' id='All_Data.csv_618E9396B1334E95836A2A0A3C432ABF'>
            <properties context=''>
              <relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Fiscal Year' ordinal='1' />
                  <column datatype='integer' name='Fiscal Week' ordinal='2' />
                  <column datatype='string' name='Need States' ordinal='3' />
                  <column datatype='real' name='Total Sales' ordinal='4' />
                  <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
                  <column datatype='real' name='Factory POS ($)' ordinal='6' />
                  <column datatype='real' name='EComm POS ($)' ordinal='7' />
                  <column datatype='real' name='Dc Amount' ordinal='8' />
                  <column datatype='real' name='Store Amt On Hand' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='All_Data (4)' inline='true' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_Data' name='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 2)'>
            <connection class='textscan' directory='C:/Users/cynth/Downloads' filename='All_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 2)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 2)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Year]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Week]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Need States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Need States]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Need States</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Sales]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Trade Spend ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Trade Spend ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Trade Spend ($)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Factory POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Factory POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Factory POS ($)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EComm POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EComm POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>EComm POS ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dc Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dc Amount]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Dc Amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Amt On Hand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Store Amt On Hand]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Store Amt On Hand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fiscal Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
      <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]' role='measure' type='quantitative' />
      <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Total Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:EComm POS ($):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Factory POS ($):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Total Trade Spend ($):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Need States:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Need State 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Need State 4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Need State 3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Need State 2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Need State 5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All_Data.csv' id='All_Data.csv_618E9396B1334E95836A2A0A3C432ABF'>
            <properties context=''>
              <relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 2)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Fiscal Year' ordinal='1' />
                  <column datatype='integer' name='Fiscal Week' ordinal='2' />
                  <column datatype='string' name='Need States' ordinal='3' />
                  <column datatype='real' name='Total Sales' ordinal='4' />
                  <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
                  <column datatype='real' name='Factory POS ($)' ordinal='6' />
                  <column datatype='real' name='EComm POS ($)' ordinal='7' />
                  <column datatype='real' name='Dc Amount' ordinal='8' />
                  <column datatype='real' name='Store Amt On Hand' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='All_Data (5)' inline='true' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_Data' name='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 3)'>
            <connection class='textscan' directory='C:/Users/cynth/Downloads' filename='All_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 3)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 3)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Year]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Week]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Need States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Need States]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Need States</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Sales]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Trade Spend ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Trade Spend ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Trade Spend ($)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Factory POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Factory POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Factory POS ($)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EComm POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EComm POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>EComm POS ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dc Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dc Amount]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Dc Amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Amt On Hand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Store Amt On Hand]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Store Amt On Hand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fiscal Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
      <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]' role='measure' type='quantitative' />
      <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Need States:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Need State 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Need State 4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Need State 3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Need State 2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Need State 5&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Total Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:EComm POS ($):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Factory POS ($):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Total Trade Spend ($):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All_Data.csv' id='All_Data.csv_618E9396B1334E95836A2A0A3C432ABF'>
            <properties context=''>
              <relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 3)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Fiscal Year' ordinal='1' />
                  <column datatype='integer' name='Fiscal Week' ordinal='2' />
                  <column datatype='string' name='Need States' ordinal='3' />
                  <column datatype='real' name='Total Sales' ordinal='4' />
                  <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
                  <column datatype='real' name='Factory POS ($)' ordinal='6' />
                  <column datatype='real' name='EComm POS ($)' ordinal='7' />
                  <column datatype='real' name='Dc Amount' ordinal='8' />
                  <column datatype='real' name='Store Amt On Hand' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='All_Data (6)' inline='true' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_Data' name='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 4)'>
            <connection class='textscan' directory='C:/Users/cynth/Downloads' filename='All_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 4)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 4)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='integer' name='Fiscal Year' ordinal='1' />
            <column datatype='integer' name='Fiscal Week' ordinal='2' />
            <column datatype='string' name='Need States' ordinal='3' />
            <column datatype='real' name='Total Sales' ordinal='4' />
            <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
            <column datatype='real' name='Factory POS ($)' ordinal='6' />
            <column datatype='real' name='EComm POS ($)' ordinal='7' />
            <column datatype='real' name='Dc Amount' ordinal='8' />
            <column datatype='real' name='Store Amt On Hand' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Year]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fiscal Week]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Fiscal Week</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Need States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Need States]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Need States</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Sales]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Trade Spend ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Trade Spend ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Total Trade Spend ($)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Factory POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Factory POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Factory POS ($)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EComm POS ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EComm POS ($)]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>EComm POS ($)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dc Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dc Amount]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Dc Amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store Amt On Hand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Store Amt On Hand]</local-name>
            <parent-name>[All_Data.csv]</parent-name>
            <remote-alias>Store Amt On Hand</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fiscal Week]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
      <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[All_Data.csv_618E9396B1334E95836A2A0A3C432ABF]' role='measure' type='quantitative' />
      <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Need States:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Need State 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Need State 4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Need State 3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Need State 2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Need State 5&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:Store Amt On Hand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:Total Sales:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:EComm POS ($):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:Factory POS ($):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:Total Trade Spend ($):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All_Data.csv' id='All_Data.csv_618E9396B1334E95836A2A0A3C432ABF'>
            <properties context=''>
              <relation connection='textscan.1q719qu12gqiht182f8t30bmzqvv (copy 4)' name='All_Data.csv' table='[All_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='integer' name='Fiscal Year' ordinal='1' />
                  <column datatype='integer' name='Fiscal Week' ordinal='2' />
                  <column datatype='string' name='Need States' ordinal='3' />
                  <column datatype='real' name='Total Sales' ordinal='4' />
                  <column datatype='integer' name='Total Trade Spend ($)' ordinal='5' />
                  <column datatype='real' name='Factory POS ($)' ordinal='6' />
                  <column datatype='real' name='EComm POS ($)' ordinal='7' />
                  <column datatype='real' name='Dc Amount' ordinal='8' />
                  <column datatype='real' name='Store Amt On Hand' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 2 (generated)' name='[Action2_EAC930DDF6C8462A88FD61D24DF792CC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='*EComm POS' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Need States' />
        <param name='target' value='*EComm POS' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action3_11861306DD0E4825B79D92F08A62A32F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Factory &amp; eComm POS $ Trends' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Need States' />
        <param name='target' value='Factory &amp; eComm POS $ Trends' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action4_F0A24C7F05E344059C9F70DAFD2A92FE]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='NS1 Total Sales &amp; Factory POS' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Need States' />
        <param name='target' value='NS1 Total Sales &amp; Factory POS' />
      </command>
    </action>
    <action caption='Highlight 3 (generated) 2' name='[Action5_EB551CCFEA8143D4841AC16896A5F246]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Factory &amp; eComm POS $ Trends N1' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Need States' />
        <param name='target' value='Factory &amp; eComm POS $ Trends N1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='*# Units Sold VS Factory $'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Correlation of Trade Spend &amp; Total Sales / Factory POS $</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Dc Amount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dc Amount]' derivation='Sum' name='[sum:Dc Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Trade Spend ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Trade Spend ($):qk] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]))</rows>
        <cols>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok] * [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk])</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]</field>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Dc Amount:qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Store Amt On Hand:qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3758975.25</value>
                <value>1690536.75</value>
                <value>9796932.0</value>
                <value>#2021-06-01 00:00:00#</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{59E04C53-2F15-4716-936C-437CC9A53E9B}' />
    </worksheet>
    <worksheet name='*EComm POS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>EComm POS Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1576' />
                <format attr='maxwidth' value='1576' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='631' />
                <format attr='maxheight' value='631' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk]</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{352E72DC-EC22-49D5-95C7-D0798D612A01}' />
    </worksheet>
    <worksheet name='*EComm POS - Seasonality'>
      <layout-options>
        <title>
          <formatted-text>
            <run>eComm POS - Seasonality</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Fiscal Year]' derivation='None' name='[none:Fiscal Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk]</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:ok]</cols>
      </table>
      <simple-id uuid='{07D4BE9A-CF6A-41E4-AFB8-363C1AF5DEC8}' />
    </worksheet>
    <worksheet name='*Sales Trends N1 &amp; N5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Sales Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Need States:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 2&quot;' />
                <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 3&quot;' />
                <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 4&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk]</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{1B5FCFEA-0B77-4374-A66E-60907BF19D89}' />
    </worksheet>
    <worksheet name='*Trade Spend &amp; Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Trade Spend &amp; Total Sales Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Fiscal Year]' derivation='None' name='[none:Fiscal Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:ok]' value='94' />
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]' value='94' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Trade Spend ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Trade Spend ($):qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk])</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{3628858D-38B6-4104-A6E0-E06F69AFB8A7}' />
    </worksheet>
    <worksheet name='*Weekly N1 POS $'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Need State 1: Weekly POS ($)  </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]' scope='cols' value='Fiscal Week' />
            <encoding attr='space' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]' field-type='quantitative' major-origin='0' major-spacing='4' max='52' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' scope='rows' value='Weekly Factory POS ($)' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]' value='YEAR'>
              <formatted-text>
                <run bold='true'>YEAR</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]</cols>
        <show-full-range>
          <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[Date]</column>
        </show-full-range>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>470982.75</value>
                <value>20</value>
                <value>2022</value>
              </tuple>
            </tuple-reference>
            <label-position x='-47' y='16' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{3C64FE2E-6CB3-4D90-98E7-C757E18D3E85}' />
    </worksheet>
    <worksheet name='*Weekly N5 POS $'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Need State 5: Weekly POS ($)  </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week' name='[wk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]' scope='cols' value='Fiscal Week' />
            <encoding attr='space' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]' field-type='quantitative' major-origin='0' major-spacing='4' max='52' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' scope='rows' value='Weekly Factory POS ($)' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]' value='YEAR'>
              <formatted-text>
                <run bold='true'>YEAR</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]</cols>
        <show-full-range>
          <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[Date]</column>
        </show-full-range>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[wk:Date:qk]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>470982.75</value>
                <value>20</value>
                <value>2022</value>
              </tuple>
            </tuple-reference>
            <label-position x='-47' y='16' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{AB8002CF-119D-49A8-98AD-984655BC3E63}' />
    </worksheet>
    <worksheet name='DC &amp; Store Amt Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>DC &amp; Store Amt Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Dc Amount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dc Amount]' derivation='Sum' name='[sum:Dc Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Store Amt On Hand:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Dc Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Store Amt On Hand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Dc Amount:qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Store Amt On Hand:qk])</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{5E3286D6-3B8F-4963-8424-6D9C1441175F}' />
    </worksheet>
    <worksheet name='Fact-POS- Monthly Seasonality'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Factory POS - Seasonality</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Fiscal Year]' derivation='None' name='[none:Fiscal Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]' direction='ASC' />
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]' value='89' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</rows>
        <cols>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok] / [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok])</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>2023</value>
                <value>2</value>
                <value>2141500.5</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>2021</value>
                <value>2</value>
                <value>1879179.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>2022</value>
                <value>2</value>
                <value>1645157.25</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[mn:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[qr:Date:ok]</field>
                  <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>2021</value>
                <value>1</value>
                <value>47942.25</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{70C02791-BF53-40C0-846C-DC55BEB4C366}' />
    </worksheet>
    <worksheet name='Factory &amp; eComm POS $ Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Factory VS EComm POS $ Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]'>
            <groupfilter function='level-members' level='[none:Need States:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' scope='cols' value='Month' />
            <encoding attr='space' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' field-type='quantitative' major-origin='#2021-01-10 12:00:00#' major-spacing='3.0' major-units='months' max='#2023-10-30 10:01:10#' min='#2021-01-01 20:29:33#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' field-type='quantitative' max='4773470.2168602971' min='-240061.73046866237' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' value='92' />
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk]' value='92' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1378' />
                <format attr='maxwidth' value='1378' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='307' />
                <format attr='maxheight' value='307' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk])</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{99C07CB8-942C-402D-B96E-2B3520270F02}' />
    </worksheet>
    <worksheet name='Factory &amp; eComm POS $ Trends N1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Factory VS EComm POS $ Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' scope='cols' value='Month' />
            <encoding attr='space' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' field-type='quantitative' major-origin='#2021-01-10 12:00:00#' major-spacing='3.0' major-units='months' max='#2023-10-30 10:01:10#' min='#2021-01-01 20:29:33#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' field-type='quantitative' max='4773470.2168602971' min='-240061.73046866237' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]' value='92' />
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk]' value='92' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]' value='34' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1378' />
                <format attr='maxwidth' value='1378' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='307' />
                <format attr='maxheight' value='307' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Factory POS ($):qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:EComm POS ($):qk])</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{4FF4B820-C516-4500-B57C-C8EC82DE76CE}' />
    </worksheet>
    <worksheet name='NS1 All Trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data (4)' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fiscal Week]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
            <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
            <column-instance column='[Fiscal Week]' derivation='None' name='[none:Fiscal Week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Factory POS ($):qk]' field-type='quantitative' max='1057908.4815184048' range-type='fixedmaxuniformmin' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Factory POS ($):qk]' scope='rows' value='Factory POS ($)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Factory POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Store Amt On Hand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Total Trade Spend ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Total Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:EComm POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Factory POS ($):qk] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Store Amt On Hand:qk] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Total Trade Spend ($):qk] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:Total Sales:qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[sum:EComm POS ($):qk]))))</rows>
        <cols>(([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[yr:Date:ok] / [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[none:Need States:nk]) * [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[none:Fiscal Week:qk])</cols>
      </table>
      <simple-id uuid='{19AE245D-7783-42FC-8BF6-667170237539}' />
    </worksheet>
    <worksheet name='NS1 Factory EComm Trade'>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data (5)' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:EComm POS ($):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Factory POS ($):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[none:Need States:nk]</column>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:EComm POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Factory POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Factory POS ($):qk] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[Multiple Values] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:EComm POS ($):qk]))</rows>
        <cols>(([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[yr:Date:ok] / [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[none:Need States:nk]) * [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{8B9DE57D-70C2-439F-B42F-F7547226229B}' />
    </worksheet>
    <worksheet name='NS1 NS5 Quarterly Trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data (2)' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fiscal Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
            <column datatype='real' name='[Store Amt On Hand]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
            <column-instance column='[Fiscal Year]' derivation='None' name='[none:Fiscal Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store Amt On Hand]' derivation='Sum' name='[sum:Store Amt On Hand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[none:Need States:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' />
              <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Sales:qk]' value='#e8edda' />
            <format attr='background-color' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Factory POS ($):qk]' value='#faf4e7' />
            <format attr='background-color' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]' value='#f9e9e0' />
            <format attr='background-color' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:EComm POS ($):qk]' value='#dfedeb' />
            <format attr='background-color' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Trade Spend ($):qk]' value='#f3ebf3' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Factory POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:EComm POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Trade Spend ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='size' value='0.14193369448184967' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[none:Need States:nk] * ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Factory POS ($):qk] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:EComm POS ($):qk] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Sales:qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Total Trade Spend ($):qk]))))</rows>
        <cols>([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[qr:Date:ok] * [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[none:Fiscal Year:qk])</cols>
      </table>
      <simple-id uuid='{054819D6-AEF3-4F9A-9902-A15717009913}' />
    </worksheet>
    <worksheet name='NS1 Total Sales &amp; Factory POS'>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data (3)' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[tmn:Date:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Total Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Factory POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Total Sales:qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[sum:Factory POS ($):qk])</rows>
        <cols>([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[yr:Date:ok] * [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[tmn:Date:qk])</cols>
      </table>
      <simple-id uuid='{80E0F9F7-81EE-4B34-86FE-42C998B16238}' />
    </worksheet>
    <worksheet name='NS5 Factory EComm Trade'>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data (6)' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[EComm POS ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Trade Spend ($)]' role='measure' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[EComm POS ($)]' derivation='Sum' name='[sum:EComm POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Trade Spend ($)]' derivation='Sum' name='[sum:Total Trade Spend ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:EComm POS ($):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:Factory POS ($):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[none:Need States:nk]'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 5&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[none:Need States:nk]</column>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:EComm POS ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:Total Trade Spend ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[Multiple Values] + ([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:EComm POS ($):qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[sum:Total Trade Spend ($):qk]))</rows>
        <cols>(([federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[yr:Date:ok] / [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[none:Need States:nk]) * [federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[twk:Date:qk])</cols>
      </table>
      <simple-id uuid='{4CE2E354-CECD-46E7-A073-5246C4D77487}' />
    </worksheet>
    <worksheet name='POS Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Factory POS ($)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column-instance column='[Factory POS ($)]' derivation='Sum' forecast-column-base='[sum:Factory POS ($):qk]' forecast-column-type='forecast-value' name='[fVal:sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Factory POS ($)]' derivation='Sum' name='[sum:Factory POS ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' />
              <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 5&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[fVal:sum:Factory POS ($):qk]</rows>
        <cols>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok] * [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{24155920-CBF9-410A-8B27-5198817EBD9B}' />
    </worksheet>
    <worksheet name='Sales Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sales Trends&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column-instance column='[Total Sales]' derivation='Sum' forecast-column-base='[sum:Total Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[fVal:sum:Total Sales:qk]</rows>
        <cols>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok] * [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{8E3990BD-8D2E-4E81-A362-A82FF58F784A}' />
    </worksheet>
    <worksheet name='Sales VS DC Amt'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales VS DC Amt Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Dc Amount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
              </aliases>
            </column>
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dc Amount]' derivation='Sum' name='[sum:Dc Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Sales]' derivation='Sum' name='[sum:Total Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Need States:nk]' member='&quot;Need State 1&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Dc Amount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Dc Amount:qk] + [federated.1yvag5g0v2v6641f6fj9n13w7mm8].[sum:Total Sales:qk])</rows>
        <cols>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{AE709FBC-C2CA-4AA7-B5A0-91EE3A9785C3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Sales-DC-StoreAmt'>
      <style />
      <size maxheight='1000' maxwidth='1600' minheight='1000' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
      </datasources>
      <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
        <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
          </aliases>
        </column>
        <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='800'>
            <zone h='98400' id='5' type-v2='layout-basic' w='89000' x='500' y='800'>
              <zone h='49200' id='3' name='DC &amp; Store Amt Analysis' w='89000' x='500' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49200' id='10' name='Sales VS DC Amt' w='89000' x='500' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98400' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='800'>
              <zone h='20200' id='8' mode='radiolist' name='DC &amp; Store Amt Analysis' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type-v2='filter' w='10000' x='89500' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8400' id='9' name='DC &amp; Store Amt Analysis' pane-specification-id='1' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[:Measure Names]' type-v2='color' w='10000' x='89500' y='21000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2700' id='11' name='Sales VS DC Amt' pane-specification-id='1' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[attr:Forecast Indicator:nk]' type-v2='color' w='10000' x='89500' y='29400'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='38' param='vert' type-v2='layout-flow' w='99000' x='500' y='800'>
                <zone h='20200' id='8' mode='dropdown' name='DC &amp; Store Amt Analysis' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type-v2='filter' w='10000' x='89500' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49200' id='3' is-fixed='true' name='DC &amp; Store Amt Analysis' w='89000' x='500' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8400' id='9' name='DC &amp; Store Amt Analysis' pane-specification-id='1' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[:Measure Names]' type-v2='color' w='10000' x='89500' y='21000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49200' id='10' is-fixed='true' name='Sales VS DC Amt' w='89000' x='500' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2700' id='11' name='Sales VS DC Amt' pane-specification-id='1' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[attr:Forecast Indicator:nk]' type-v2='color' w='10000' x='89500' y='29400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6A9E2233-6B7C-4C84-9030-208EEB656359}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Seasonality Trends N1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='All_Data' name='federated.1yvag5g0v2v6641f6fj9n13w7mm8' />
      </datasources>
      <datasource-dependencies datasource='federated.1yvag5g0v2v6641f6fj9n13w7mm8'>
        <column datatype='string' name='[Need States]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Need State 1&quot;' value='Allergy Care' />
          </aliases>
        </column>
        <column-instance column='[Need States]' derivation='None' name='[none:Need States:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='5' type-v2='layout-basic' w='82250' x='500' y='889'>
              <zone h='47667' id='3' name='Fact-POS- Monthly Seasonality' w='82250' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50555' id='26' name='*Weekly N1 POS $' w='82250' x='500' y='48556'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='268' h='98222' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16750' x='82750' y='889'>
              <zone h='22445' id='8' mode='radiolist' name='Fact-POS- Monthly Seasonality' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type-v2='filter' w='16750' x='82750' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12111' id='9' name='Fact-POS- Monthly Seasonality' pane-specification-id='0' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' type-v2='color' w='16750' x='82750' y='23334'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='46' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='45' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='22445' id='8' mode='dropdown' name='Fact-POS- Monthly Seasonality' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type-v2='filter' w='16750' x='82750' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47667' id='3' is-fixed='true' name='Fact-POS- Monthly Seasonality' w='82250' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12111' id='9' name='Fact-POS- Monthly Seasonality' pane-specification-id='0' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' type-v2='color' w='16750' x='82750' y='23334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50555' id='26' is-fixed='true' name='*Weekly N1 POS $' w='82250' x='500' y='48556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5ACA24D5-5C0E-4B9D-B00E-ADC57AD504F9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='199'>
    <window class='worksheet' name='*Weekly N1 POS $' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='200'>
            <card type='columns' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C4A64199-55DE-444A-A910-F307CFDB3892}' />
    </window>
    <window class='worksheet' name='*Weekly N5 POS $' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='66'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='200'>
            <card type='columns' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='66'>
            <card param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[yr:Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{688A76BC-B25C-4F82-A59C-ADF27C592367}' />
    </window>
    <window class='worksheet' name='*Sales Trends N1 &amp; N5' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='70'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='4' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FA7E670F-0FD0-4DDE-BE54-3F6979ED71DE}' />
    </window>
    <window class='worksheet' name='Factory &amp; eComm POS $ Trends' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='110'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='66'>
            <card pane-specification-id='6' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{17183C10-84F7-454C-8E0B-39391A7C5DBB}' />
    </window>
    <window class='worksheet' name='Factory &amp; eComm POS $ Trends N1' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='108'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='66'>
            <card param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='6' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D9AC9832-440E-4964-97C0-737D8E2748FE}' />
    </window>
    <window class='worksheet' name='*EComm POS - Seasonality' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='70'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='70'>
            <card mode='radiolist' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3955D3B5-4B9E-494C-8E70-7596331C8376}' />
    </window>
    <window class='worksheet' name='*EComm POS' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='66'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='66'>
            <card pane-specification-id='5' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E25150F4-7260-4787-84AC-08B11754CFAA}' />
    </window>
    <window class='worksheet' name='NS1 NS5 Quarterly Trends' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[sum:Store Amt On Hand:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[none:Fiscal Year:qk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[none:Need States:nk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7AC1A2B-2E67-4BEF-93A9-F9FC2C41A46B}' />
    </window>
    <window class='worksheet' name='NS1 Total Sales &amp; Factory POS' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Need States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[:Measure Names]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[none:Fiscal Year:qk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[qr:Date:ok]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 2)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A25AC327-B98C-4066-9DA5-7D485668E1C9}' />
    </window>
    <window class='worksheet' name='*# Units Sold VS Factory $' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='12'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='radiolist' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{805BF795-55DF-44C5-AC29-F4A3D61DE020}' />
    </window>
    <window class='worksheet' name='NS1 All Trends' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[none:Fiscal Week:qk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[none:Fiscal Year:qk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[none:Need States:nk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 3)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{386D3BEF-F638-43B6-842C-17798297C99F}' />
    </window>
    <window class='worksheet' name='NS1 Factory EComm Trade' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[:Measure Names]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[none:Fiscal Week:qk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[none:Need States:nk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[qr:Date:ok]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[sum:Factory POS ($):qk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 4)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E2CBCD1-F77D-492C-8E63-B7353EB9163F}' />
    </window>
    <window class='worksheet' name='NS5 Factory EComm Trade' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[:Measure Names]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[none:Fiscal Week:qk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[none:Need States:nk]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[qr:Date:ok]</field>
            <field>[federated.1yvag5g0v2v6641f6fj9n13w7mm8 (copy 5)].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{723A07B6-3507-4A9B-ABE8-42D2494E69A6}' />
    </window>
    <window class='dashboard' maximized='true' name='Seasonality Trends N1' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='*Weekly N1 POS $'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Fact-POS- Monthly Seasonality'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{DE0D798B-9513-4943-BD22-BADBF8D0AD79}' />
    </window>
    <window class='worksheet' name='Fact-POS- Monthly Seasonality' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='110'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='13'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='radiolist' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{ED335F0F-38E4-4D0E-9E63-1BE3A44BE2E3}' />
    </window>
    <window class='worksheet' name='*Trade Spend &amp; Sales' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='13'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='radiolist' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Fiscal Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BDC61893-15B5-464F-A814-49B7B1E9EBE0}' />
    </window>
    <window class='dashboard' name='Sales-DC-StoreAmt' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='DC &amp; Store Amt Analysis'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales VS DC Amt'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{ED4E9E01-72D4-44C6-879E-8A1485F748E7}' />
    </window>
    <window class='worksheet' name='POS Forecast' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9F6A5C42-00B0-4989-9B16-62B9F3601DCC}' />
    </window>
    <window class='worksheet' name='Sales Forecast' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='4' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{337BA1DD-C67F-4D69-A5C7-8159D11A28FB}' />
    </window>
    <window class='worksheet' name='Sales VS DC Amt' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='116'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='13'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='radiolist' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EFDCBAE5-3CCC-4585-B261-66BE60CA7B21}' />
    </window>
    <window class='worksheet' name='DC &amp; Store Amt Analysis' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='13'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[none:Need States:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1yvag5g0v2v6641f6fj9n13w7mm8].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F490C013-C74F-48BA-A992-38AC6EDB0C72}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='*# Units Sold VS Factory $' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='*EComm POS' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='*EComm POS - Seasonality' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='*Sales Trends N1 &amp; N5' width='192'>
      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
      mDRnM7HgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='*Trade Spend &amp; Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='*Weekly N1 POS $' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='*Weekly N5 POS $' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXxcVfn/33f2mcxkT5M0W9OkadM0Sfd9L7KDG4rIjl9Z1J/IKoKyuSsg
      IvJFEBUVRPyKgCBIaQt0X9M2TdJmbfY9mcy+3HvP74+kpSVpk7ZJmpL7fr0mk5l77r3P3Dmf
      Oec89znPkYQQAg2NcYrubBugoXE20QSgMa4ZswKQZflsm6AxDhizAtDQGA00AWiMazQBaIxr
      NAFojGs0AWiMazQBaIxrNAFojGs0AWiMazQBaIxrNAFojGs0AWiMazQBaIxrNAFojGs0AWiM
      azQBaIxrNAFojGs0AWiMazQBaIxrNAFojGs0AWiMazQBaIxrNAFojGsMw3YkIaivKKamtQdJ
      Z6Zw9iysBCguPoDekUje1Ez0KFSVFdPukygomEGEWaah3k1qWgKu9kZ8hmiSYiKGzSQNjcEY
      thZAAPVN3SxYuoxlS+YTadFTtH0rSTkziQy3UlrbQcPBPfQYEynMjmPL9n2An9rDbahhDzv2
      HiLKYRsuczQ0hsTwtQBAV0c9OzZtIiE1k+y0BFzCTFKUFSk7k3VFrQTwMHX2BGxWPfrQIWQg
      FPCye9sO8uYvxmqQEEIcfaiqOpzmaWj0Y9gEIEkSl15xDUJVKNv1ERU6Y9/7IOl0CEVF1Qkk
      SQIkJHpbDXd3O/4IHdmmXlM0AWiMJsMmACH76HQLYqNtRFhteJGwIdPjl5FbmolOTCDG76Wl
      y40tFhR9BAYgLnkS82dNYMOWbaxYuRizvrdXJoTAYBjWBkpDox/DV8N0eppr9lHmDWK2xzIz
      JY6QPZe9u7aAycHcOUmY1Gj27N7D5gpBwZx5SCjExUditCcwK6ebhhYnk1NikYbNKA2NkyON
      1fUBZFnWWgCNEUe7D6AxrtEEoDGu0QSgMa7RBKAxrtEEoDGu0QSgMa7RBKAxrtEEoDGu0QSg
      Ma7RBKAxrtEEoDGu0QSgMa4ZNNpMCQcoK9rOjn0HcfsCmCwRZOfNYvG8Amxmoxa5qXFOc9Jo
      0KCzkT/+5R/EZ85gwdxZTIix43d3sm/XTooO1nPZV28ka8LIzOHVokE1RoOTCkD29dCjmom1
      W5AARQ7hD8rYbFaUgBt32EhspHVEDNMEoDEaDDofoKOmiPeK3Xz1knn84aknONzhZuaF1/KF
      ZXkjapgmAI3R4KQ1LNTTwqt/e5kqNROLcx9b6oJcPjedv/z5j0SIL3Pe0nnoddooQOPc5aRe
      IFNUEheuWQrhII0NrXz1a7exqDCHtOx8Llg+X6v8Guc8Jx8DeF24hIGGA9txGZNZNGsqDYd2
      47FmMDXZhjsoERM5Mrl8tC6Qxmhw0hZADvfwygvPU+sxkjd1EjqdRHLmVLy1u3nmf1+gzdc/
      bYnid1JaXocKCDnIweK9VNS20CszQVPNIfYeKCesqECI9rYeAPyuLjpd/uH/hBoaJ2GQQbBA
      CQfYs+VDtu8ppq3bjTUylvyZc1mxdAF2sxHpmF6QEAq7N2+kwaVw6UWrKN68nsis2QTqi9FP
      LCDGf5hKXyTT4mX21YZZvTiFzRubWLw4mw83fMScZatxmPWA1gJojA6D1DAJvdHKvBUXMm/F
      hYMerLOhAkP8ZByBSoSq0BUyUpgUC44pbChuwq06yZudT7RVjyhbh0IKAIeKdpCev/Bo5dfQ
      GC2GLzGWEqC0qoOFyxaxsaEShECV+jLDGYyoIRlFr6LvywynE6AAzTUltETaubCgdyyhKApC
      CBRF0TLDaYw4gwrA393IjvJOVizIZ8faf/L+njquuO5r5CRHHVcu6GzB5fezffNmqqurSMyc
      gkUoBGSB0t1JRFwMkX4XTl8Qh0mHLJkwAsmZecya7mDztr2sXjYHvf7jVkDrAmmMNIPWsNIt
      71DknsaM2C08/3Yp91w9j2defI0n77vxuHKWuElcetEkECoWs5VpWal4rCG2fPQBqmRi8ZIp
      WNQoNm3ZSrmiMnXWIiQEdrsVW1wauUldVNZ3kpMep8UXaYwagwpAp9MhhMxHa9cxb83nyUgW
      uD0VJ95B0jFvwTwAoidmsWZi1jEbo1ixes1xxQtnOQBIzZl56tZraJwhg4ZD5y+/DP3hdez3
      T+Kq8wupPlzPysULR8M2DY0RZwi5QQUBj5Od27fTE5CYMWceGYkxfWnORw7NDaoxGgzaAnha
      KvjuvfdT1e4DxcvvfvoAr20qGw3bNDRGnEF/Yku2ryNz1TXc8KUlAKwqSOH2F9bxxWXTR9w4
      DY2RZtAWIH5CMnUH99PjC6EqYYr372dCQtJo2KahMeIMOgYQcpC1r7/EfzcV4Q9B2tRCbrzx
      apJGaCLMEbQxgMZoMGgNk/R6UjOnscyYwPTZC8lJSxgNuzQ0RoVBu0C1RWt59tUNRNsNPP3z
      n9LkUUbDLg2NUWFQAdRXl5O34hJWrrmInGSJhjb3aNiloTEqDDoG2PHW73n2PweYGGunsbYK
      x4R0MguXcsd1l42oYdoYQGM0GFQAqiIjK8dHZUqSDqNxZCunJgCN0WDwWCC9AZMWpq/xKWVI
      qRH9HXV8sG0fAVkbAGt8uhhSH0NvseGq+4ifv/MaCamZzFu4mNzsSURYTVrossY5zZAXyg56
      uti4YS3/euO/xKRNRgnJ3HLX95gUax4Rw7QxgMZoMCQBOGt28cgzr7F01fmct3IRkVYTRev/
      D3/KCpZMmzAihmkC0BgNhiQAd0MJG2pULluWP2pdHk0AGqPBkAbBpshoite+QUVTF7IsIyva
      YFjj3MDl8VPb3MGJfueHJIBAdztdPc08/uNHefDBB3nqr28Pq5EaGiPFo79/nYXXP0rRodp+
      IhBCDHEQLFSaqsvYvGMvtoQMli9biMOs3QjTGPvMu/Zh9pXXMWliPG89eSc5GR+H8itCGVoL
      4O2o5GeP/56k7Fz8NZt56qX/9isjhMzOjevZuPEj1q7/CFdAprOhgvfXb+C9dR/hDsrIvm42
      rHufdWvfo6bVBbjYu6cKENQc2EVtu2e4PreGBv5giOqGNiYmRFPf2sW1P/gdPR7f0e3yUAUQ
      6GpCSp7OojmzOH/VUmprDw9QSs/cpatZtmwZUxMtNLR2c+BQHUuWr2TJ9ET2HWrk4IFipsxa
      wpo1K6jYvweBgtcbwNteS43bRHqCfZg+uoYGVNS1EgiFuebixTx66xfYX1nPDQ8/j8cXAKBb
      dg/tRlh05hzyLeu4++57CQeDfPWWu/uVkSQJd3s9u/aVEjbGsDTLQWO1AYtBQoqJxV/eiEEX
      JsNmAp0eIzJhoLmmlLZuBxdedH7vKjRaZjiNYaK0qoGwrDAtI4nPrZpDTWMbL7yxkft+8yqP
      fedKOkJdQxOAHPCz6Iu3cWPGBAh5KW1wDljOkZDG8pUTKN29jdoWJ3okVAGSHEZnMqEXehQh
      gN60iXogOTOXOGsXta09TEuN0TLDaQwbZYebMRn15E5OxW6z8uTd19DY7uT51z5g0sQE5l+e
      OHgXSA4FaCzZxHP/XI/X66Ozpohf/emNfuWEv5uSyjp8/hBGgx4VHfFmherGNkpKK8iYlMKk
      pFgOHKqmta4MY1QqvVVdYuqshbQd3EG7O8iQbktraAyCEIKS6kZiI+1MTIgGwGQ08NwDNzI3
      L5NHn3+dzeVlg3uByra8xXMvv0mzSyUtMQaBjvOv/Drnz83ud8LW+iqaO93ETEglfWICkhqi
      svwQekcimSkTkCRBS10V7T6JaTmTMerCdHYEiIuPJORz0RPUER9jR0LzAmmcGW5fgKU3/YgI
      i4mNL3wfvf7j3/rDTR3c+MPnWHlz8tDcoD31e3jspSIe+u7X8NZs57fvN3H/zZ8f0Q+gCUDj
      TKhqaGXmV37ATZ9bzq/vvqbf9kZvB6871w/NCyQHPHS6faiqQA74qG1qGXaDNTSGk4q6VoJh
      mfys1AG3y4Yw6MXQBsExk+ayIm0L995zD6rQ8/Vv3DGsxmpoDDcHKhsAmJE9sAC65B4kpKEJ
      QGe0ceWt93GFoiDp9GiLQ2qMdQ5UNWLQ65iakdxvmxCCLtmFbqgCCHnaeepnP6ek2YlFJxM1
      40J+dvtXht1oDY3hQAhBcWU9k1MmEGEdeL5Kt+zCojMPTQA9tUU0OAq5dH40q6ZG8tSGrmE1
      WENjOPH4g9S2dLJi9lQM+v4T2gWCbtnFBGPs0AbB1vh0EvQhEiQPf//vFnrcWm4gjbFLZV0r
      gWCYvKxUBsri71H8hESYOEPU0FqAiAk53H5bGmYDxB2q4srJU4fbZg2NYaO8roVQWCZvcsqA
      61h0y71rU8cYIgcXwJbXnqbMvoJpno3Uxq3hqysKht9iDY1h5EBVAxaTkSnpiQNu71R6BRBr
      iBq8C6QqCooiCAd9BMLaTDCNsY0QgtLqRqIcVlInxA5YpjvswiQZidBbB28BbFFxFL31J0oU
      L2HDC1SuNxM/dSF3Xn/5sBuvoXGmeP1BqhraSI6LJj7G0W+7EIIuxUWEzopFMg0ugJnnXcVv
      Vn/C5TnC64NpaJwuLm+A+pYuLl0+E90A9TQgQviUADEGB0bJMJRlUvVIQkHV6fpWedfQGLvU
      Nnfg9gUoyE4bcLtPCRBQg8QaUpEkaWhuUHfjAR64/yFefet9Oly9MUEaGmORkqreEIi8rJQB
      t7sVLzIKsYZIYIipESPTC/nxIzns2bKBR++4GV3CFD5z0aWcv2w2Ri0uQmMMUVzZgCRJJxRA
      11EXaBQwRAEEXa28/tpr7CiuZvqyy1i1bC7rXn6Gj+LTWZOnLZmkMXYoqWpkYnw0sZEDzy/v
      kl1ISMQYegfIQxKA4vcSP3UxP7nmFsyG3l5T4q13olj6j7I1NM4WwVCYQ7XN5E5OwWwauGp3
      yT29HiBdb4zQyQWgyhzYu5MOVxA9sHXTRwDYYlOYXzBlWI3X0DhTals6cfsCTJuUjF7Xf3ir
      CkG34mKi8eNey6AtQDDgx+v1H/eeYvadoLSGxtmjsr43Big/O3XAEAi34kUWytH+PwyWGlFn
      YM7i1SyZnkizz8Sqz1xAweR4issqByyuymHcLhc+fxAhQAgVr8eNL9D7GgRBvxe3x4cqBKAS
      CskAKHKYsLYAh8YZUFbdhE4nDTgHAD4eAB/xAMEQxwBRGYXMOPQaP3zoAQwRE/nmt2/tV0aI
      MHu2b0Nnc+DqbCdr5iLCzSU0enSEPU6mzV2CI9TKtpJ6Ii0Khphs5uTa2bm9iSXLprN364ck
      zVhCSszILsCt8elECMGBqgYcNgsZyXEDlumSXcCpCEAJ8d83X+VwmxcQdDUdJnFaEh9s3slX
      Llr6icIGZi5YjF6vo65kOz1uD+3tfpauWgHOOjZVNRAVbmLW/MXER+h5f90HqLmzAWip2IuY
      kMtErfJrnCahsExFXSuxUXYmJsQMWKZb7sEsmbDpP65nJxeAzkDhvKVkB3u7Jued9xkAjLbI
      fkUlSUKvUynbs532sI1FOTE0HwajJIEtAtnTRVAvYzboQdJjEGpfZrgS6tvtfPFzM7XMcBqn
      TbfLS3VjG/OmZyJUhVDo+O60QNAVdmGVzBhkHSElBAwmAElHUuok5EAPL/72V+yu7eHi85ZQ
      1mXjnhsuPv4EQrB3ywaMEwtYlpmIJBRMSIRVgfB6MDkcWGU3gbCMwwyypMcEJGfmMSUlzI7i
      wywuyNQyw2mcFp2udjqcHgpy0jGZTP22+5QAfhEg1hCN1WQ5OkgeUg1z1uxinz+d792aQ123
      TNn2fQOUcnHgYCvTzPXs7qwnY8oMJiVGsGnzVmS/l8KFy4gImdi8fQs2o0JCRt7R1WYmTC6k
      ZdsGKpuiyU6J0Rbe0zhlSqsaAZhxgjQoATWIXw0Sa4g8zkM0tBlhSdlY29/ktXdaqG/uZNa8
      Swco5eBLV19xNLWh0WRGnzuHpFAQSWfAaDAgSWmsXpGIrEqYTUYAFiyKBCTy569A0UKMNE6T
      4sp64MRpUJyKBwWV2GNcoDBEAVhj0vnBQ9/jUHUdBlss06dm9SsjSTos1v6DWLPZcmwpDMbj
      Z+IbDH0ZQnX6oRmjoTEAJdWNxERGMDE+esDt3QO4QGGISySF/U7+/Lvf8PyfXqL20G5+/sKb
      Z2iuhsbwoSgqJVWNZKdOwGbp3/+Hj12gMacjgJ6a3RwU2TzwjS8Rl5BI9YALZGhonB1aOp10
      ubxkpyViMp44Bsiut2HSGY97f0i9DnvKNBxtb/K3N2ppbHEyf8UVZ261hsYwUd3YjscXIH9K
      2oAhEIpQccpuUsz917QeVABCCMyRKTzwyIPU1DdjsEaRlTnwbBsNjbNBeW0LiqqSmzlwCISr
      bwD8ye4PDEEApZv/zWsflREVHUvhrJlkRCX0LTepOSs1zj5CCPZX1GOzmMlKHTgNSpfsQiCI
      +4QHCIYggOlLLiMjfymtrS0cOrCPl9/5P9rt0/jVvTeeufUaGmeIoqocqm3GYbOQnjRwDJBT
      diEB0fr+81cGFUBP62E2fLCFNpcHd4+T5Jw5rJk554wN19AYDvyBMJX1bWSnJZ7QA9Qp92CW
      zETo+7vpBxVAa20Zaz/cQnb+LOYsOY+C6TlE2m1nbrmGxjDg9HhpbOvioiUDZyxUhEqP4sGi
      M2HVWfptH1QAUxdczDPzL8Lb08G2TRv45fefxZu6mN/cp3WBNM4+pdVNKKog/wR3gINqCK/i
      J94YjUHqnyl6UAE0V+zlP+u3UH7oEKboZDJnLWHO4tVnbrnGKeEPhBCA1Wwc0NU3XikZLAZI
      BPGrgX4hEEcYVAAGSwQzl6zh6ptuwWLsryCNkScQDHHJ7U/gCwT54Ln7sZiNg+90DuPy+rFb
      zegGmNf7SYorG7BZTExOGTg7iVN2oyL6hUAcYdAzJKRNYc6MqVrlP0sIIfjTW5vYsq+CPQdr
      eX9Hydk2aUTZcaCa2V99kLuffIVQWD5p2d61gBvISI7Hbuvfv4feATBwwhZgSKEQGmePpnYn
      P//T28RGRRAZYeHxv7xDMBQ+22aNCJ1OD9/8+YvUtXTy9N/f547HX8brD56wfJfLS1O7k8kp
      Cdgs/ZdCcspuDvpr0KMf0AUKmgDGNEIIfvHi2zS1O3n8jqu4/rJl7CipZu32EoawvPM5haKq
      PPjsP9lfUc9DN3+OL66Zxwuvf8j1Dz2H6xNZSY5Q29yJy+MnLysV3ScyFLaFu3ir+yN8aoAl
      kTMxSgP39jUBjGF2ldbw4lubWDl3Gl9YM4//d+V5WExGHv/LOyijkJ91W3Eldz7+Mi2dPSN6
      HiEEr63fxR/f3MiFiwu457qL+cNDX+O6S5fy74+KuPK+3w5oQ1VDK4FQuF8axKZQO293b8Sr
      +lkVOY8Z1qwTOg40AYxRAsEwDz77GjpJ4tFbv4DZaCAjOZ5rLlnMln0VrN9ZOqLnb+tyccND
      z/P0q+/z0LOvjWjKmqqGNu558hUmJsTw67uvxmQ0YDWbeOrea7j3+kv4YNdBLr/jV9Q2dxy3
      34HKBsxGAznpSUCvkGoCjbzTvQlVCC6IWswUS/oJK78QQhPAWOWND/ewfmcpV1+8mPl5k4He
      xAPfuGINUXYbj//lnUEHiadLWFb47lN/53BzB5NTEvjL25t5+d2tI3KuYEjmO4+9RGuni8fv
      vIpJEz/25lhMRh655Qs8dMvnKK1u5PI7njya/VlVBaXVTVgtJian9sanVQTqWNuzDUnScVHM
      YiZZJp7UZexXFE0AY5EOp5uHf/cvJsbH8L0bLzvuS5ySkcSVFyxg095yNuwqG/axgBCCF9/a
      xN/f285Xzl/Ie8/cS0ZyPPc8+QpFh2qH9VyqKnjy5Xd5f0cJt31pNZcundmvjE4nce91F/PM
      fddzuKmdS25/gm3FVQTDYcprm0lLjCXKbuWAr5L1PTuw6SxcFrOcZOPJkzYLIfhrRbUmgLGG
      EIKn//4+NU3t3HPdRSTHH+++00kSt191Pnqdjsf/+u6wn7+yvpX7n/4HqRNi+cXtV5KWGMtv
      77uOcFjmtp+8SLfLO2zn2lFSxc9ffJuCKWn84H8+i14/cHXU6XRce8kSXnjof/D6g1xxz294
      44M9VDe1M33yRIq8B9nk3kukwc4lMctIMMYMerOw0efjz5XDKAAhBA1VJbzx8ks0+gEEjeV7
      eW/dBt55dy0dniD+7ib++957rFv7LiU1bYCTrZvLAMGB7R9S2+4ZLnPOWQ4ebuapV9YyJzeT
      mz67fMAvMit1AldfvJgPdpXx0Z5Dw3Zul9fPLT/+I6GwzDP3X8+E2N4MCqvm5vLgLZ+n6FAt
      9/7678jDMB7ocLq59ScvopN0PHv/jcRERpy0vCRJfHH1XF577NtIEtzw8PMoQiVulo5tnmIm
      GGO5PGbFCd2dxyKE4H9Ly+kKhoa3BYiMT6VwagYCEKpCRX0XK1atZNWcyZRWNFJeXkHhguWs
      OW8NTVUlCASqquJsOIjTlEJ6wsA53ccLiqryyHP/IhAM8eitX8BiHji6UZIkvvGl1ThsFh7/
      6zvDNkB9/K/vsnlfJd+68jOsmpt73Pluu2I1ly2fyUvvbOGv/9lyRl0vRVF5+Hf/4uDhJr7/
      P5czc2r6kPaTJImlM3P452PfJjM1ni/cnEvWwkhSTYlcFL0Eu942pDCRUmcPb9TWszAhfvgS
      MUiSRGRUFN19r4WqEtbpMOkkpMhIgj2N+PRhIsxGkPQYhUwIaK4ppbHDzuc/e+G4zwz39qZ9
      /PujvVz5mfksLphMKBQ6Ydmc9ES+sHoOf3t3Gx/sLGXFnDNbvPzDPYf4xZ/eZn5eJt+74WIU
      WeZYWemAX915FQdrmrj7yVfIzUxi1tSM0zrXP97fyfP/+pBLlhZw8+dXIIdP7cZeVlYsjz59
      Hm1qF5nmiayImINB+Tjb28kIqSq/2HcAk17Ht3OnjFwmEkmSMKDrzQIdDKK3WjCpRsKqCkKH
      LEkYgeTM6aTGuCiuamNWduK4zQznC4T48Qv/JsJq5vtf/xxWy8C39o/lrmsv5qV3tvLU39/n
      vIUzTjtIrqWzhzufeIVoh43f3nc9EbaBc7SmJcXz2/uu5/I7n+Tbv3yZd5++e9Cuy7EIIahu
      bOeBZ/7JxIRonrjramzWwT/nsfs3hztY596OW3gpiMhhgX1Gv4nuJ2NdfSO7Orr48uQMChLi
      h3MMoNBUW0NTWweNtTV0ecOkROkpKj7I9j2HyJmSTnZGMkV79lK6fzuRiVOOnjxjxkKU5n3U
      d3o4lYbV5fWzZX/FiLkDRwshBM+8+j77Kxu457qLyUrtP3l7IKZNSuaqCxby3rZitu4fOGX9
      YCiKyh2Pv0R5bTO/uP1KCqacfL738tlT+eFtX2BfRR13PvG3U+p+BYJhvvHTF+l0enj63muZ
      lBw/dDuFSpH3EG92fUBYyKyOXECuKRfDCe7wDoRPlnlsfymRJiPfmj6tdxlVMUyoqiJaGutF
      fX3vo9vtE6oSFm3NTaKj2yVUVQghVNHT1SaaWtqFrKhCCFl43H4hhBDhoF+4vQGh9h0vHA4P
      es4/vPGRsC76mrjuB78TbV09QlXVQfcZi9Q0tom0i74jCr/yfdHZ4zmlfXeX1YjoFbeKL979
      lAiH5VPaV1VV8eK/NwrzwpvEVd97RsiyMqT9gqGw+NK9vxHmhTeJF17/8KTXXVVVISuK6Ozx
      iLueeFkY598ovvPYX4WiDP278isBsbZ7q/ht8yvi5fb/iOZgp/htyUGx7M13xQ/37BMd/sCg
      372qquK5snIx9dXXxQsHK46+LwkxNoNKZFketAvU7fJy5xN/45X/biM9KY7/vf96Vs7NHXCB
      5LGKqgq+/qM/8PI7W3n159/ksuWzTnn/mx75Pf9ct5N3nr6bpTNzhrzv/op6LvjmL4mPtrP2
      mXtJOkFWtYFo7ezh/G/+gqZ2J2//+k7mzzg+W6DT7aOsppH1O8vYsKuM7cVVBMMyC/Oz+PeT
      dxA1hFmFAkFH2Mnanm10yy6mWiaxwF7IU8UVvFRZTazFTFcgSLTZxM3TpvDFSRk4TAN3h2rd
      Hq7asJEkq5U/r1yC3dhb7pwWAPTmhf/z25t54Ol/EJYVvnP1BXz3+kuO5h4dqwgh8AVCvL1p
      Lzc8/HvOmz+dfz12+wl94SejuLKe+dc+wiVLC/nHL741pLGAPxjiom89xs7SGv795B2snjf9
      lO3fvK+Cy77zKzInJvDu03fjD4ZYt6OUdTtL2V5cRXOHE1UVRDmsLJs1lfPm5/HZFbNJih84
      NPmTxy8P1LLZvZewUJhvzyPHnMUv9pXyavVhFiUm8OO5M9nV0cVvSg5S7/EyJSqSb02fyqqJ
      SRh0uqN5S4QQfH/XXv55uI5nlixg9cSko+c55wVwhJKqRm776Z/YVlzF6nnT+fU9V5OTnjSm
      Zk8JIWjucLJ5XwXvbilm7bYDtHT2EOOw8f6z3yX/BKubD+W413z/d/xrwy4+fP5+5vWFTpyI
      sKzw0LOv8cRf3+W7N1zCw7d8/rSv029eWcs9v34Fh82KxxdAUVUiI6wUTElj+eyprJk/nTm5
      mSecsD4QITXMDs8B9vnKcegjOC9qAVFSDPfvKuK9hiYuSJ3Ij+bOPPor7g3LvFRVw58rqugM
      BJk/IZ5v501jVlwsOkliX2cXX92wicWJCTy3dOFxn/VTIwDobXZ/+od/89tX3ycmys6v776a
      y1fMxnAav6rDgRCCsKzQ1N7Ne9sO8OaHRRQdqqXD6cZiMpGXlcLFSwr53KrZTJ+cckZdt+0H
      qrjgm7/koiWF/OWHN6PX6VAUlUAoTGePh5KqRg5UNXCgsoHiqgbKa1tYMCOL15+4nciI01+Z
      xxsI8cVn/05JSwcrIyL5/JJC5uZmkpwQhfEUvz+BwKv4WduzjeZQO2mmJFZEzUGVTTywq4j1
      TS1cnpHKw7MLsX7i2EIImnx+nj9YwRu19Qjg/JRkbs7N4cdFxezv6uZPKxaTH3v86jGfKgFA
      74V486Mi7n7ibzS2d3PDZcv4ybe+RLRjaJksZEXB6w/2PUJ4/QG8/iBuXxCXxxBBGqYAABBh
      SURBVEe328e+8jqS4qIwGQ1IkoQk9bp9dZLU91pCJ0Fju5NtxZXsLjtMWFaIi7IzP28yly6b
      yap5uWSlThi2FkpRVa5+4Fn+s2kfd15zIZ1ODwdrm6moa6G5w8mRbzkywkJGcjxT0hP50Teu
      IDtt4GRSQyGsqjx5oIw/lleiCiiIjeGn82aRFXl660d3hnt4r2cLTtlNoW0qCxwz6AnK/L+t
      O9jd0cV1UyZzV/50zPoTz04UQnDQ6eI3pQf5sLkVCZCF4NrsTO6fmd/ven/qBAC9F6G+tYtv
      /uzPrN1+gMIp6dz+1fOx2yw4XT663V6cbh9Ot5dutw+nq+/Z7cPtCxCWFcKyjCwrff8ryErv
      TTm9TkJRBUaD/viLKUQ/F64kScRF2VkzfzqXLC1kycwcEqIdp9XPHwq7yw6z7Gs/RlVVrBYT
      DpuFqRlJ5GWnkp+VSn52KmlJcURGWLFZTGckPm9Y5qf7inntcD3zEuKYERPNS5XVOIxG7p+Z
      zwWpE4fcogkhaA138l/nVvxqgGWRs8m1ZtLsC3DXtl0Udzu5KSebb8+YhnEI84ShV5xb29r5
      9YEyXKEwr6xeTtwAs8Y+lQI4QiAU5n//sY5HnnsdX6D/XUKdJBFhNWO3mbHbLNitFhw2C3ab
      mWiHjShHBDEOG9EOGzGOCKLsVhwRFgIhmRiHDaNB37scLAIhRN/SsL1CEEJgMuiZPjnlhPNV
      hxtVCNbvKCUsK2SnTSA9KW5EnAHOUIgHdhaxrqmFi9NSeHh2IQ6jgY0tbfxg917aA0G+lpPN
      bdNzsA3hO6wJNLK+ZwcCWBU1l8nmVOq9Pm7bvJ0al5u7CqZz/ZQsDEOs/McSUhQCioqjr7X+
      JJ9qAUBvRdxzsJZdpTVERlh7K3Nkb6WOjLBiNBgw6HUYDPreZ33v81gaPA+VoKKwvqmFRKuF
      mX0DwOGmxefnru272NvZzZcnZ3BvQd5x/fFaj4eHd+9ne1s7cxLi+Om8WaTYBo7RUYXgUOAw
      G117MEkGPhO9iInGBEqdPdy1bRct/gB350/nq9mZI+ba/tQLYDwghOCw28PP9pXwYUsrVr2e
      a6dM5qacbKJPEFB3OtS43Xxn6y4qXG5uy83h1tycAbskAVnhyQNlvFRVTbzFwoOzClh1jOsR
      eiv/Xu9BtnsO4NDbKDDNor5HZVtbB+81NBFQFH44dyaXpqeO6H0dTQDnOEFF4a26Bn65vwSf
      rHBRWgr1Hi97O7tItUdw54xcVk9MxnQG4w4hBMXdTu7YupOuYIi7CqZz1eRJ6E/SJVGEYH1j
      Mw/v2Y87HOaW3BxuysnCajAQVmW2e4rZ76ugxS2xt9ZBg1vGLytYDXrSIiL4dt40Vk8ceTe2
      JoBzmBafnx8V7Wd9cwuptgjum5nHquQkgqrK/9XU8mxpOV2hEKuSE7kjfzpZDvspVyghBFta
      2/nuzj34ZYVH5hRySVrKkI4jhKDS5eYHu/eyt7ObFUmJLE2OQ7HW49W3U9utY+0hI9EGG7Pj
      Y1mcmEBhbAyTHPbT6u+fDpoAzkFkVeU/9Y08tr+U7lCIS9JS+G5hHtGmjz07Qgha/QGeKjnI
      2/UNGCUdN+Rkce2UyUQah5ZeUVZV3m1o4sHde7HqDfxywWwWTUg4bt+wkCn319IRdmLRmbDo
      zJh1pt7/JRNmnYmgLHjywEE+bGlmWVaYjGgVsxKP0Z/O3PgEJjvsmPX6sxLCogngHKMjEOCx
      /aW8WddAnNnE92cVsKbv1v9AqEKwra2dx/aXUursYUqkgzvzp7MiOfFohVOFoCsYpMHro8nn
      p87jpd7jpdbjZX9XN/EWM79aOJfCuNijxxVC0BLuZKt7H83hjgHPfQSDpMeAAa8cQq8XFNim
      sMhROGCy2tFGE8A5gqyqfNjcyg+LimkPBLgwdSL3FuYxwWIZ9NdcCEFQVflbVQ2/P1iJMxRi
      cWICDqOReq+Xeo8PnyyjCIEiBHpJwm404DAamWS384PZ+aRHRCBJEkII3KqPXZ4SDvlrMUh6
      8mxZzLBlowiFgBoiqIYIiCABNXTc66AaZpI5mRm2bHTS2JiOPi4EUNLtpLirm4LYGKZERQ75
      ZsrZRBWCBq+Pg84eDvW4KOroYmdHJ3ajgbvzp/PZjLRT7icLIajzevn1gYO8W9+IJEkkWi2k
      RUSQGmEjwxFBWkQEKTYbMWYTMWYTEYaP/eeKUCjxVbHHW4ZXDZBuSmKho4B4Q/Q56TaGcSAA
      IQSPFu3nb1WHkQC70UhhbAyz42OZHR/LJLudBIv5pB6NUzlXWFXxygrucBhPOIxJp0Ov06Hv
      C4/QSVLf/33PSAQUhc5gkPIeF2XOHsqcPZQ7XbjDYVRAL0nEmc0UxsVw/8wZJFmtZ1ThVCHo
      DASxGw2Y9Hokeld8O9ExVaHSGGpji3sfHbKTGH0kCxz5TDYPbTA8lvnUCwCgJxRiX2c3uzs6
      KersYn+Xk4CiIAExZhPp9ggKY2PJj40mLSLiaGWVJAkdvc8SvZW3yefjnzV1TI+JItUWQVvA
      T5s/0PsIBHAGQ3hkGVcojEeWMep0GD5R6Y8TgAQBRcEZCqP0fRWRRiNToyPJjY4iNzqKKZEO
      Eq1WYi1m9ANUOIHgSBxGSIQxSHp0x0z2O51KeqRaeFU/W937qQrUI0kSM21TKYzIwaLrH1Zw
      LjIuBBBWZQIiiFkyYZQMhFWVMmcPuzu6KOrsorzHRbPPT+g0J+GbdDocRgMRRiMOg4E4i5kJ
      VgsSElEmI2G1t2UIqyqyqhJSVWQhep9VFbNOx5SoSKZHRzEtOoqUCNugHpGwkPEpfnoULx3h
      btrkbjrC3fQoHnRIOPQRROojiNTbiTLYidTbcehtWHRmLH3XQUElpIYJid6HV/HjVf14+p5d
      soeWvgFupjmFRY4CogynF+g2VvnUC0AIwRb3Pg76D2PSGbBIJhz6iGMeNiTVjDsI5T0euoMh
      hAC1b98jsT5q33OD18e7DU3kxURzTXYmSVYrUabevrLNoMdmMKCXJMJCplt2EWuMQo+eIz/R
      R/7KQiEkwgTUEB7Fd9wCbtIAfwUCj+KjQ3bSEe6mS3bhUwOERG9GBT06IvV24o3RR9fFcite
      wkLmSJiehIRZMmLSmTBJBhShEBIy4b7HseUkwCAZiDE4mBMxnXRzMvoxMnAdTj79AkDQGGyn
      PHAYl+LFrwaOeidUen/xwzI0dOmR9UbmTjCgR0d9h5Fqp54J0SozEsB4JMwZHTXtUNttwmoT
      LEhT0As41Gyg3tM7Cyk/Xcag62FHo4/JCVZSrWbChAmrMmERJnRMZTsdrDozDn0EsYYoJhhj
      iDNEE2+I7pcdQQiBTw3gUry4FA8uxUuP3PscFEGMkgGrzoJdZyNCb8Wut2LTWYnQW4nQWTDr
      TH1S+PQyqgIIe7vYtG0PqqqSmb+AyUkSRbvbmDUni+riXeiTcsnoS441Em5QIQQyCiE1TFjI
      eFU/bsXDfyva6AiGKVG9fCVLR4czxHtNelamw75ahchEhZmxvS5CWQnzr4NGFmcIdJKMouhJ
      cgjafSo6em/m2M0qjW06DvlVVqWreLw6oh12kkwGXLIbq94Mkp1UowPoFRaqmxpZJdfcm9Py
      2PbiyH9WnZl4Ywx2nRWLznzav8hHroMe3ZhxR54tRtXRfqikmCmzl5AapeO9dVvJTCrE5wvi
      bT9MrdfCyhHODCdJEkYMGPW9HzsaBzCBaQWTaW6v4ydNCl+Oz6TIV05rnIVvZaRRbqzmhQ4d
      N0zIRBKC9c4NrIi0Ud+qIzu1hYUxaygwevlh92asvlTSo5P5SmISz9RvYUVGiC/GpPKn7gqy
      TctYFOlku9/FVEOYBhJZZEskoLhpC/fQEAwwxz6VaeahT0w/0+ugMcoC8ARlMqwm0OkxIhOm
      NzNca5ediy654LjMcKqq4vf7j7YCR94/gk6nQ6fTHc0idwRJko4m15Ll4/MFnexYR7LQ+f1+
      sqPjkevKuGpdDdFGHdbIiQT8fauUqGFq/WG+Pm0q5cFWdrV2UZgWxfL4GGKVJDYeruPvBhMJ
      MV6yrHmYwkEkVNwBD3tEJVMiCnH7yggbvHj9flzhNqrlDnrUAImW3vOP1Gc81WPp9b2TflRV
      PS5L36fpWKMqAINe37eyiUCVQA8kZ+YSZ+3icHMPuWkxxxlqMn0cyms0nvrEjhPtM9D7vSsS
      KlitVjAZuWP+AmIN8Nf9e1HjYnrfFwLcMqrFQW5sPD6nhSpnFz69jbBOR35sEg3tbXQIhcxI
      PR9276fZbiAyRiUtykVbCPb59xJQPQTCHibZJhBtSmGFfjKeUD3rvIeZFDOTUwkQOJXPeLrH
      Oh3OlWON6higvaaYQ04TWbEylW0Gls2bwOaNTSxenMOmD9Yzdd4KEiItvfM4RykUQpHD/Gjn
      dva5gzgVyHBE84s50/jJrr00BhXyk1L4Tu5kXP6DrPPVIRHEGYLuDgf1QROXZAcIqoL6ZiPb
      2wRpyS5uzj6PNFXhJ0XF1Kg+Pjs1kSvi89H3jSeb/KU0kUCeUc9G9356lDBGnYUCewGZpqhP
      +bBzbDHKXiBBa301HT6JnCmZGHVhOjsDxMVFEvK7cAV0xMXYR1UAQ+W1shLSU7KYG3ni6Y1B
      pYtdvg4W2qcMeMNKY+zxqXeDDhe+cBiLwYjuJPVaFQoKEsZx7lk5l9AEoDGuGbM1TAjRb8Q+
      VlAU5bg07mMJVVWP5iYaa4zF6zZmBSBJ0phuAcaqbYqi9N6xHqMh32Ptuo3NqwRj9guEsW3b
      WP31h7F53cbsGEBDYzQYe5LU0BhFNAFojGvG1ojkEwihsHvTetyKEVmysGLpAkz6s92/FZTv
      2si2phDXXX7eWbblGITC/u2b6Q5BOOBn+oKVTIw6u7O2hAhzcO9etle0cMOXL0OoCgf2bKPL
      pxD0epk6bzkZ8UNfZG94UagrLxvbLYDqb6VHSmblyhWk21Wanb6zbJHA19VIO7Ek2cfYpVN9
      tHqMLF+2jEX5aVQdbj/bFgGQkpVHVkpfOhVJR07BPJYvW8aCvBSa2nrOqm3RSZPGtgCE2wmO
      aCQkHHYTHnfw7NojVIpLqsnPm3JW7RgQvZ3UqBBr129g/c7D5E+beLYtQpKMREbajnktYTYa
      aK4uYfOhHmZOOf21Cc4cPZGR9rEtAGwR6AN+BIJAQMFiPbs9Nld9MQfqOti7cxs1VdWU17Wd
      VXuORfF10ui3snrlSpYvyKH0QNXZNqkfQggqi7dzuEfPZ1YvxWo8+zfFxvQYQB+Rgt7zPmVl
      Cs1dQRbnnd0J2VHpM/na1TMRikxAVshJH9p6vqOBzmhBCvZQWVmFt7uBiLhTW/RuJBBhH1W1
      TbS3tVFZWc2EpASKy+vJm5lAbU0VsYkpxDpOf3mmM0IJUVffMPbvA8ghPx1dPUTGxGEzj42V
      H4UQeH0+7BFnawA3MHLIT0enE4PVTly046yHVQs5SHNbZ98riei4eHzOdkJ9c1Uc0fE4bMOX
      vv2UUGXa2jvGvgA0NEaSsT0G0NAYYTQBaIxrNAFojGs0AWiMazQBaIxrNAFojGs0AWiMazQB
      aIxrNAFojGs0AWiMazQBaIxrNAFojGs0AWiMazQBaIxr/j/DicCrAMqobgAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='DC &amp; Store Amt Analysis' width='192'>
      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
      YlEaDUmK5/8DsxL9uFIUwmkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fact-POS- Monthly Seasonality' width='192'>
      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
      f0xingSS0gUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Factory &amp; eComm POS $ Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Factory &amp; eComm POS $ Trends N1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NS1 All Trends' width='192'>
      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
      gxldAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='NS1 Factory EComm Trade' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NS1 NS5 Quarterly Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NS1 Total Sales &amp; Factory POS' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NS5 Factory EComm Trade' width='192'>
      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
      pfi7N14lXSzUpg+QzWQwQjFsy+TytVGEHeHUifYtXyVyODNLd0Ny067/rp5efjQ8xIcPHd2U
      620k232VyJHMHG/r7F7Tvr7GZgamp9ibTM07Qqb4xfse5Gouw1OD52pTAxw5cR8H9nZz4eIl
      dMNA3hBEtZWdwqHZGQ40NW3a9Q41tzKey+2KFWW2e2d+Mp9flyNjb6qRodk0Vd8jW60QMg1C
      pklfUwufue9ttakBJsdGyeaLdPfsxSkViN2wSuRWrTSolGKikOfxvsObdn0NONraxvn0FG/r
      6llz/+3MQpNxO0YFeNJHiGAxw7WEamkaj+zZz7OXLxG3bE60dSy5p5rcXUf3Ho4cPUYqHqGt
      rZVoooWW1NYGhxWcKoYWjNJuJifbOzgzOV5fUWYDeG3sKlXPYzyXoyPesO5a6lRHJ+O5HK9c
      G+VIy9Kxn+0n7xqglOKl0ZGaDXTdDg12CF1ozJVL5KsVnr5wvp45ogaUXZfvXhzg62dPM5LN
      0JNIrftYTQh+6vBRehJJwubSOeC7UgDTxSLDmTke3IIITSEEp9o7eX7kCl9863Um83nOTk0A
      1x/ipdn0klSLddbmzOQ479mzn0QozDOXLtCTTN7W8e2xOD97fPksxV0nAKkkTw2e44OHjqBv
      Ufv1UEsLF2fSvP/AIT554hQvjFyh6nl849wZDE1nYHqKv339Zdy6CNbNWxNjnGrv5Im+Q7yj
      p3dxRH+9rOYG31UCkErx9OAAnQ0JOhu2bmJOyDD5zXe9h/2NTUQtm2Ot7Xz21RdpikR5774D
      fPjwMQ42tfDi6PCW2bjdqHgeXz97mqvZzLJtc+USpq4TtSx0TeMnDx6pmZeqJgKQvst0ehaF
      wnEclO9RdTZ3HrAvJU+e78fQNN5/4OAtB0g2g4XUKQDv6O7laEsbj+3vW3xw7+7dy7npSdLF
      Ai9fHeHbA+fu2RohXSzyuddeojkS5ekL55FKoZTimUsXeO7yJZ4dusj9HV0b4poVqgbuirOn
      36SxKUXB0VHVMsor0dV3nKitk8/nia+Rfvxu8aXkm+f7SYTCvG/fgW3vw17g4kyab547w4Nd
      3RiaztBsmk8cO0WsBvMU7pZSqYRlWRsyJ7h/coKYZbEn1UjV8/irV1/kZ46dpD0W5zsXBmiN
      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
    </thumbnail>
    <thumbnail height='192' name='POS Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Forecast' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales VS DC Amt' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales-DC-StoreAmt' width='192'>
      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
      h9+6XE9xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Seasonality Trends N1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
